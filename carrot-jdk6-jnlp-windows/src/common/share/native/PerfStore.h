/*
 * @(#)PerfStore.h	1.2 10/03/24
 *
 * Copyright (c) 2006, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */
#ifndef _PERF_STORE_H_
#define _PERF_STORE_H_

#include "jni.h"
#include "PerfLabel.h"
#include "PerfLib.h"


class PERFLIB_API PerfStore {

public:
    // A simple class used to indicate an out of bounds exception.
    class OutOfBounds { };

    ////////////////////////////////////////////////////////////////////////////
    // Puts a time stamped label entry in the performance storage.  The time
    // stamp is automatically generated by this call.
    //
    // @param  label  the label to write.
    //
    virtual void put(const char * label) = 0;


    ////////////////////////////////////////////////////////////////////////////
    // Gets the number of labels currently stored.
    //
    // @return the number of labels currently stored.
    //
    virtual size_t size(void) const = 0;


    ////////////////////////////////////////////////////////////////////////////
    // Gets the label at the given index.
    //
    // @return the label at the given index.
    //
    // @throw OutOfBounds if the index is out of bounds.
    //
    virtual PerfLabel get(size_t index) const = 0;


    ////////////////////////////////////////////////////////////////////////////
    // Abstract class should always have virtual destructor defined.
    //
    virtual ~PerfStore() {};
};

#endif    // _PERF_STORE_H_
